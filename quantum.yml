configs:
  bbnavi-datahub-credentials:
    external: true
    name: bbnavi-datahub-credentials
  datahub-nginx-conf:
    external: true
    name: datahub-nginx-conf
  mainserver-common-master-key:
    external: true
    name: mainserver-common-master-key
networks:
  adminer:
    external: true
    name: adminer
  bbnavi-datahub-postgresql-staging:
    external: true
    name: bbnavi-datahub-postgresql-staging
  bbnavi-redis-server:
    external: true
    name: bbnavi-redis-server
  public:
    external: true
    name: public
  ssh_public_keys:
    external: true
    name: ssh_public_keys
services:
  app:
    configs:
    - source: bbnavi-datahub-credentials
      target: /app/releases/bbnavi/credentials.yml
    - source: mainserver-common-master-key
      target: /app/config/master.key
    deploy:
      placement:
        constraints:
        - node.hostname == node-001.tpwd-bb-navi
      restart_policy:
        condition: on-failure
    environment:
      RAILS_ENV: production
      RAILS_LOG_TO_STDOUT: 1
      SVA_COMMUNITY: bbnavi
    image: registry.gitlab.tpwd.de/tpwd/bb-navi/datahub:staging
    networks:
      bbnavi-datahub-postgresql-staging: {}
      bbnavi-redis-server: {}
      default: {}
    volumes:
    - assets:/assets:rw
    - unicorn:/unicorn:rw
  cron_job:
    command: bin/start-cron.sh
    configs:
    - source: bbnavi-datahub-credentials
      target: /app/releases/bbnavi/credentials.yml
    - source: mainserver-common-master-key
      target: /app/config/master.key
    deploy:
      labels:
        swarm.cronjob.enable: "true"
        swarm.cronjob.schedule: 1 1 1 * * *
        swarm.cronjob.skip-running: "true"
        traefik.docker.network: public
      placement:
        constraints:
        - node.hostname == node-001.tpwd-bb-navi
      replicas: 0
      restart_policy:
        condition: on-failure
    environment:
      RAILS_ENV: production
      RAILS_LOG_TO_STDOUT: 1
      SVA_COMMUNITY: bbnavi
    image: registry.gitlab.tpwd.de/tpwd/bb-navi/datahub:staging
    networks:
      bbnavi-datahub-postgresql-staging: {}
      bbnavi-redis-server: {}
      default: {}
      public: {}
    volumes:
    - assets:/assets:rw
    - unicorn:/unicorn:rw
  db:
    deploy:
      placement:
        constraints:
        - node.hostname == node-001.tpwd-bb-navi
      restart_policy:
        condition: on-failure
    environment:
      DATADIR: /var/lib/postgresql/data
      POSTGRES_DB: bbnavihub
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_PASSWORT: bbnavihub
      POSTGRES_USER: bbnavihub
    image: postgis/postgis:15-3.3
    networks:
      adminer:
        aliases:
        - int-development-mainserver
      bbnavi-datahub-postgresql-staging:
        aliases:
        - bbnavi-datahub-postgresql-staging
      default: {}
    volumes:
    - datahub_db_15_staging:/var/lib/postgresql/data:rw
  delayed_job:
    command: bin/delayed_job run
    configs:
    - source: bbnavi-datahub-credentials
      target: /app/releases/bbnavi/credentials.yml
    - source: mainserver-common-master-key
      target: /app/config/master.key
    deploy:
      placement:
        constraints:
        - node.hostname == node-001.tpwd-bb-navi
      restart_policy:
        condition: on-failure
    environment:
      RAILS_ENV: production
      RAILS_LOG_TO_STDOUT: 1
      SVA_COMMUNITY: bbnavi
    image: registry.gitlab.tpwd.de/tpwd/bb-navi/datahub:staging
    networks:
      bbnavi-datahub-postgresql-staging: {}
      bbnavi-redis-server: {}
      default: {}
    volumes:
    - assets:/assets:rw
    - unicorn:/unicorn:rw
  nginx:
    configs:
    - source: datahub-nginx-conf
      target: /etc/nginx/conf.d/default.conf
    deploy:
      labels:
        traefik.docker.network: public
        traefik.enable: "true"
        traefik.frontend.rule: Host:staging.datahub.bbnavi.de
        traefik.port: '80'
      placement:
        constraints:
        - node.hostname == node-001.tpwd-bb-navi
      restart_policy:
        condition: on-failure
    image: nginx
    networks:
      default: {}
      public: {}
    volumes:
    - assets:/public:rw
    - unicorn:/unicorn:rw
  redis:
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
      REDIS_DISABLE_COMMANDS: FLUSHDB,FLUSHALL
    image: docker.io/bitnami/redis:6.0-debian-10
    networks:
      bbnavi-redis-server:
        aliases:
        - bbnavi-redis-server
    volumes:
    - redis_data_staging:/bitnami/redis/data:rw
  tile_server:
    command: martin --config /martin_config.yml
    deploy:
      labels:
        traefik.docker.network: public
        traefik.enable: "true"
        traefik.frontend.rule: Host:staging.tiles.bbnavi.de
        traefik.port: '5001'
      placement:
        constraints:
        - node.hostname == node-001.tpwd-bb-navi
      restart_policy:
        condition: on-failure
    environment:
      DATABASE_URL: postgres://bbnavihub@bbnavi-datahub-postgresql/bbnavihub
    image: registry.gitlab.tpwd.de/tpwd/bb-navi/datahub:tileserver
    networks:
      bbnavi-datahub-postgresql-staging: {}
      public: {}
    ports:
    - published: 5001
      target: 5000
version: '3.7'
volumes:
  assets: {}
  datahub_db_15_staging:
    external: true
    name: datahub_db_15_staging
  redis_data_staging:
    external: true
    name: redis_data_staging
  ssh_public_keys:
    external: true
    name: ssh_public_keys
  unicorn: {}

